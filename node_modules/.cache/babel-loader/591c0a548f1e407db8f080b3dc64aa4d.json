{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhonc\\\\Desktop\\\\CALCULADORA\\\\queueing-theory-calculator\\\\src\\\\components\\\\buttons\\\\Button.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let ButtonType;\n\n(function (ButtonType) {\n  ButtonType[\"Button\"] = \"button\";\n  ButtonType[\"Reset\"] = \"reset\";\n  ButtonType[\"Submit\"] = \"submit\";\n})(ButtonType || (ButtonType = {}));\n\nconst Button = ({\n  text,\n  type,\n  onClick = () => {}\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"bg-green-100 hover:bg-blue-600 text-white rounded shadow text-center uppercase font-bold w-full h-14\",\n    type: type,\n    onClick: onClick,\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"w-full flex justify-center\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["C:/Users/jhonc/Desktop/CALCULADORA/queueing-theory-calculator/src/components/buttons/Button.tsx"],"names":["React","ButtonType","Button","text","type","onClick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,WAAYC,UAAZ;;WAAYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAYZ,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,OAAO,GAAG,MAAM,CAAE;AAAhC,CAAD,KAAqD;AAClE,sBACE;AACE,IAAA,SAAS,EAAC,sGADZ;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,OAAO,EAAEC,OAHX;AAAA,2BAKE;AAAG,MAAA,SAAS,EAAC,4BAAb;AAAA,gBAA2CF;AAA3C;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;KAAMD,M;AAYN,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\n\r\nexport enum ButtonType {\r\n  Button = 'button',\r\n  Reset = 'reset',\r\n  Submit = 'submit',\r\n}\r\n\r\ninterface ButtonProps {\r\n  text: string;\r\n  type: ButtonType;\r\n  onClick?(): any;\r\n}\r\n\r\nconst Button = ({ text, type, onClick = () => {} }: ButtonProps) => {\r\n  return (\r\n    <button\r\n      className=\"bg-green-100 hover:bg-blue-600 text-white rounded shadow text-center uppercase font-bold w-full h-14\"\r\n      type={type}\r\n      onClick={onClick}\r\n    >\r\n      <p className=\"w-full flex justify-center\">{text}</p>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"module"}