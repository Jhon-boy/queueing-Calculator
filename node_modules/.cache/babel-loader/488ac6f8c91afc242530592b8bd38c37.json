{"ast":null,"code":"import { Division } from './../../../utils/MathUtils';\nexport class CostMMK {\n  //\n  constructor(mmk, time) {\n    this.mmk = void 0;\n    this.time = void 0;\n    this.ctte = 0;\n    this.ctts = 0;\n    this.cttse = 0;\n    this.cts = 0;\n    this.ct = 0;\n    this.ctExercise = 0;\n    this.mmk = mmk;\n    this.time = time;\n  }\n\n  calculateExercise(cs, cts) {\n    this.ctExercise = this.mmk.lambda * this.time * cts + this.mmk.k * cs;\n  }\n\n  calculateAll(cte, cts, ctse, cs) {\n    this.ctte = this.calculateCTTE(cte);\n    this.ctts = this.calculateCTTS(cts);\n    this.cttse = this.calculateCTTSE(ctse);\n    this.cts = this.calculateCTS(cs);\n    this.ct = this.calculateCT();\n  }\n\n  calculateCTTE(cte) {\n    return this.mmk.lambda * this.time * this.mmk.wq * cte;\n  }\n\n  calculateCTTS(cts) {\n    return this.mmk.lambda * this.time * this.mmk.w * cts;\n  }\n\n  calculateCTTSE(ctse) {\n    return this.mmk.lambda * this.time * Division(1, this.mmk.miu) * ctse;\n  }\n\n  calculateCTS(cs) {\n    return this.mmk.n * cs;\n  }\n\n  calculateCT() {\n    return this.ctte + this.ctts + this.cttse + this.cts;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/jhonc/Desktop/CALCULADORA/queueing-theory-calculator/src/library/queueing/cost/CostMMK.ts"],"names":["Division","CostMMK","constructor","mmk","time","ctte","ctts","cttse","cts","ct","ctExercise","calculateExercise","cs","lambda","k","calculateAll","cte","ctse","calculateCTTE","calculateCTTS","calculateCTTSE","calculateCTS","calculateCT","wq","w","miu","n"],"mappings":"AACA,SAASA,QAAT,QAAyB,4BAAzB;AAEA,OAAO,MAAMC,OAAN,CAAc;AASnB;AAGAC,EAAAA,WAAW,CAACC,GAAD,EAAgBC,IAAhB,EAA8B;AAAA,SAXhCD,GAWgC;AAAA,SAVhCC,IAUgC;AAAA,SARzCC,IAQyC,GAR1B,CAQ0B;AAAA,SAPzCC,IAOyC,GAP1B,CAO0B;AAAA,SANzCC,KAMyC,GANzB,CAMyB;AAAA,SALzCC,GAKyC,GAL3B,CAK2B;AAAA,SAJzCC,EAIyC,GAJ5B,CAI4B;AAAA,SAFzCC,UAEyC,GAFpB,CAEoB;AACvC,SAAKP,GAAL,GAAWA,GAAX;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACD;;AAEDO,EAAAA,iBAAiB,CAACC,EAAD,EAAaJ,GAAb,EAA0B;AACzC,SAAKE,UAAL,GAAkB,KAAKP,GAAL,CAASU,MAAT,GAAkB,KAAKT,IAAvB,GAA8BI,GAA9B,GAAoC,KAAKL,GAAL,CAASW,CAAT,GAAaF,EAAnE;AACD;;AAEDG,EAAAA,YAAY,CAACC,GAAD,EAAcR,GAAd,EAA2BS,IAA3B,EAAyCL,EAAzC,EAAqD;AAC/D,SAAKP,IAAL,GAAY,KAAKa,aAAL,CAAmBF,GAAnB,CAAZ;AACA,SAAKV,IAAL,GAAY,KAAKa,aAAL,CAAmBX,GAAnB,CAAZ;AACA,SAAKD,KAAL,GAAa,KAAKa,cAAL,CAAoBH,IAApB,CAAb;AACA,SAAKT,GAAL,GAAW,KAAKa,YAAL,CAAkBT,EAAlB,CAAX;AACA,SAAKH,EAAL,GAAU,KAAKa,WAAL,EAAV;AACD;;AAEDJ,EAAAA,aAAa,CAACF,GAAD,EAAc;AACzB,WAAO,KAAKb,GAAL,CAASU,MAAT,GAAkB,KAAKT,IAAvB,GAA8B,KAAKD,GAAL,CAASoB,EAAvC,GAA4CP,GAAnD;AACD;;AAEDG,EAAAA,aAAa,CAACX,GAAD,EAAc;AACzB,WAAO,KAAKL,GAAL,CAASU,MAAT,GAAkB,KAAKT,IAAvB,GAA8B,KAAKD,GAAL,CAASqB,CAAvC,GAA2ChB,GAAlD;AACD;;AAEDY,EAAAA,cAAc,CAACH,IAAD,EAAe;AAC3B,WAAO,KAAKd,GAAL,CAASU,MAAT,GAAkB,KAAKT,IAAvB,GAA8BJ,QAAQ,CAAC,CAAD,EAAI,KAAKG,GAAL,CAASsB,GAAb,CAAtC,GAA0DR,IAAjE;AACD;;AAEDI,EAAAA,YAAY,CAACT,EAAD,EAAa;AACvB,WAAO,KAAKT,GAAL,CAASuB,CAAT,GAAad,EAApB;AACD;;AAEDU,EAAAA,WAAW,GAAG;AACZ,WAAO,KAAKjB,IAAL,GAAY,KAAKC,IAAjB,GAAwB,KAAKC,KAA7B,GAAqC,KAAKC,GAAjD;AACD;;AA/CkB","sourcesContent":["import { MMKModel } from './../formulas/MMK.model';\r\nimport { Division } from './../../../utils/MathUtils';\r\n\r\nexport class CostMMK {\r\n  readonly mmk: MMKModel;\r\n  readonly time: number;\r\n\r\n  ctte: number = 0;\r\n  ctts: number = 0;\r\n  cttse: number = 0;\r\n  cts: number = 0;\r\n  ct: number = 0;\r\n  //\r\n  ctExercise: number = 0;\r\n\r\n  constructor(mmk: MMKModel, time: number) {\r\n    this.mmk = mmk;\r\n    this.time = time;\r\n  }\r\n\r\n  calculateExercise(cs: number, cts: number) {\r\n    this.ctExercise = this.mmk.lambda * this.time * cts + this.mmk.k * cs;\r\n  }\r\n\r\n  calculateAll(cte: number, cts: number, ctse: number, cs: number) {\r\n    this.ctte = this.calculateCTTE(cte);\r\n    this.ctts = this.calculateCTTS(cts);\r\n    this.cttse = this.calculateCTTSE(ctse);\r\n    this.cts = this.calculateCTS(cs);\r\n    this.ct = this.calculateCT();\r\n  }\r\n\r\n  calculateCTTE(cte: number) {\r\n    return this.mmk.lambda * this.time * this.mmk.wq * cte;\r\n  }\r\n\r\n  calculateCTTS(cts: number) {\r\n    return this.mmk.lambda * this.time * this.mmk.w * cts;\r\n  }\r\n\r\n  calculateCTTSE(ctse: number) {\r\n    return this.mmk.lambda * this.time * Division(1, this.mmk.miu) * ctse;\r\n  }\r\n\r\n  calculateCTS(cs: number) {\r\n    return this.mmk.n * cs;\r\n  }\r\n\r\n  calculateCT() {\r\n    return this.ctte + this.ctts + this.cttse + this.cts;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}