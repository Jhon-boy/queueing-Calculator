{"ast":null,"code":"import { eDocs } from './constants/e.js';\nimport { falseDocs } from './constants/false.js';\nimport { iDocs } from './constants/i.js';\nimport { InfinityDocs } from './constants/Infinity.js';\nimport { LN10Docs } from './constants/LN10.js';\nimport { LN2Docs } from './constants/LN2.js';\nimport { LOG10EDocs } from './constants/LOG10E.js';\nimport { LOG2EDocs } from './constants/LOG2E.js';\nimport { NaNDocs } from './constants/NaN.js';\nimport { nullDocs } from './constants/null.js';\nimport { phiDocs } from './constants/phi.js';\nimport { piDocs } from './constants/pi.js';\nimport { SQRT12Docs } from './constants/SQRT1_2.js';\nimport { SQRT2Docs } from './constants/SQRT2.js';\nimport { tauDocs } from './constants/tau.js';\nimport { trueDocs } from './constants/true.js';\nimport { versionDocs } from './constants/version.js';\nimport { bignumberDocs } from './construction/bignumber.js';\nimport { booleanDocs } from './construction/boolean.js';\nimport { complexDocs } from './construction/complex.js';\nimport { createUnitDocs } from './construction/createUnit.js';\nimport { fractionDocs } from './construction/fraction.js';\nimport { indexDocs } from './construction/index.js';\nimport { matrixDocs } from './construction/matrix.js';\nimport { numberDocs } from './construction/number.js';\nimport { sparseDocs } from './construction/sparse.js';\nimport { splitUnitDocs } from './construction/splitUnit.js';\nimport { stringDocs } from './construction/string.js';\nimport { unitDocs } from './construction/unit.js';\nimport { configDocs } from './core/config.js';\nimport { importDocs } from './core/import.js';\nimport { typedDocs } from './core/typed.js';\nimport { derivativeDocs } from './function/algebra/derivative.js';\nimport { leafCountDocs } from './function/algebra/leafCount.js';\nimport { lsolveDocs } from './function/algebra/lsolve.js';\nimport { lsolveAllDocs } from './function/algebra/lsolveAll.js';\nimport { lupDocs } from './function/algebra/lup.js';\nimport { lusolveDocs } from './function/algebra/lusolve.js';\nimport { polynomialRootDocs } from './function/algebra/polynomialRoot.js';\nimport { qrDocs } from './function/algebra/qr.js';\nimport { rationalizeDocs } from './function/algebra/rationalize.js';\nimport { resolveDocs } from './function/algebra/resolve.js';\nimport { simplifyDocs } from './function/algebra/simplify.js';\nimport { simplifyConstantDocs } from './function/algebra/simplifyConstant.js';\nimport { simplifyCoreDocs } from './function/algebra/simplifyCore.js';\nimport { sluDocs } from './function/algebra/slu.js';\nimport { symbolicEqualDocs } from './function/algebra/symbolicEqual.js';\nimport { usolveDocs } from './function/algebra/usolve.js';\nimport { usolveAllDocs } from './function/algebra/usolveAll.js';\nimport { absDocs } from './function/arithmetic/abs.js';\nimport { addDocs } from './function/arithmetic/add.js';\nimport { cbrtDocs } from './function/arithmetic/cbrt.js';\nimport { ceilDocs } from './function/arithmetic/ceil.js';\nimport { cubeDocs } from './function/arithmetic/cube.js';\nimport { divideDocs } from './function/arithmetic/divide.js';\nimport { dotDivideDocs } from './function/arithmetic/dotDivide.js';\nimport { dotMultiplyDocs } from './function/arithmetic/dotMultiply.js';\nimport { dotPowDocs } from './function/arithmetic/dotPow.js';\nimport { expDocs } from './function/arithmetic/exp.js';\nimport { expmDocs } from './function/arithmetic/expm.js';\nimport { expm1Docs } from './function/arithmetic/expm1.js';\nimport { fixDocs } from './function/arithmetic/fix.js';\nimport { floorDocs } from './function/arithmetic/floor.js';\nimport { gcdDocs } from './function/arithmetic/gcd.js';\nimport { hypotDocs } from './function/arithmetic/hypot.js';\nimport { invmodDocs } from './function/arithmetic/invmod.js';\nimport { lcmDocs } from './function/arithmetic/lcm.js';\nimport { logDocs } from './function/arithmetic/log.js';\nimport { log10Docs } from './function/arithmetic/log10.js';\nimport { log1pDocs } from './function/arithmetic/log1p.js';\nimport { log2Docs } from './function/arithmetic/log2.js';\nimport { modDocs } from './function/arithmetic/mod.js';\nimport { multiplyDocs } from './function/arithmetic/multiply.js';\nimport { normDocs } from './function/arithmetic/norm.js';\nimport { nthRootDocs } from './function/arithmetic/nthRoot.js';\nimport { nthRootsDocs } from './function/arithmetic/nthRoots.js';\nimport { powDocs } from './function/arithmetic/pow.js';\nimport { roundDocs } from './function/arithmetic/round.js';\nimport { signDocs } from './function/arithmetic/sign.js';\nimport { sqrtDocs } from './function/arithmetic/sqrt.js';\nimport { sqrtmDocs } from './function/arithmetic/sqrtm.js';\nimport { sylvesterDocs } from './function/matrix/sylvester.js';\nimport { schurDocs } from './function/matrix/schur.js';\nimport { lyapDocs } from './function/matrix/lyap.js';\nimport { squareDocs } from './function/arithmetic/square.js';\nimport { subtractDocs } from './function/arithmetic/subtract.js';\nimport { unaryMinusDocs } from './function/arithmetic/unaryMinus.js';\nimport { unaryPlusDocs } from './function/arithmetic/unaryPlus.js';\nimport { xgcdDocs } from './function/arithmetic/xgcd.js';\nimport { bitAndDocs } from './function/bitwise/bitAnd.js';\nimport { bitNotDocs } from './function/bitwise/bitNot.js';\nimport { bitOrDocs } from './function/bitwise/bitOr.js';\nimport { bitXorDocs } from './function/bitwise/bitXor.js';\nimport { leftShiftDocs } from './function/bitwise/leftShift.js';\nimport { rightArithShiftDocs } from './function/bitwise/rightArithShift.js';\nimport { rightLogShiftDocs } from './function/bitwise/rightLogShift.js';\nimport { bellNumbersDocs } from './function/combinatorics/bellNumbers.js';\nimport { catalanDocs } from './function/combinatorics/catalan.js';\nimport { compositionDocs } from './function/combinatorics/composition.js';\nimport { stirlingS2Docs } from './function/combinatorics/stirlingS2.js';\nimport { argDocs } from './function/complex/arg.js';\nimport { conjDocs } from './function/complex/conj.js';\nimport { imDocs } from './function/complex/im.js';\nimport { reDocs } from './function/complex/re.js';\nimport { evaluateDocs } from './function/expression/evaluate.js';\nimport { helpDocs } from './function/expression/help.js';\nimport { distanceDocs } from './function/geometry/distance.js';\nimport { intersectDocs } from './function/geometry/intersect.js';\nimport { andDocs } from './function/logical/and.js';\nimport { notDocs } from './function/logical/not.js';\nimport { orDocs } from './function/logical/or.js';\nimport { xorDocs } from './function/logical/xor.js';\nimport { columnDocs } from './function/matrix/column.js';\nimport { concatDocs } from './function/matrix/concat.js';\nimport { countDocs } from './function/matrix/count.js';\nimport { crossDocs } from './function/matrix/cross.js';\nimport { ctransposeDocs } from './function/matrix/ctranspose.js';\nimport { detDocs } from './function/matrix/det.js';\nimport { diagDocs } from './function/matrix/diag.js';\nimport { diffDocs } from './function/matrix/diff.js';\nimport { dotDocs } from './function/matrix/dot.js';\nimport { eigsDocs } from './function/matrix/eigs.js';\nimport { filterDocs } from './function/matrix/filter.js';\nimport { flattenDocs } from './function/matrix/flatten.js';\nimport { forEachDocs } from './function/matrix/forEach.js';\nimport { getMatrixDataTypeDocs } from './function/matrix/getMatrixDataType.js';\nimport { identityDocs } from './function/matrix/identity.js';\nimport { invDocs } from './function/matrix/inv.js';\nimport { pinvDocs } from './function/matrix/pinv.js';\nimport { kronDocs } from './function/matrix/kron.js';\nimport { mapDocs } from './function/matrix/map.js';\nimport { matrixFromColumnsDocs } from './function/matrix/matrixFromColumns.js';\nimport { matrixFromFunctionDocs } from './function/matrix/matrixFromFunction.js';\nimport { matrixFromRowsDocs } from './function/matrix/matrixFromRows.js';\nimport { onesDocs } from './function/matrix/ones.js';\nimport { partitionSelectDocs } from './function/matrix/partitionSelect.js';\nimport { rangeDocs } from './function/matrix/range.js';\nimport { reshapeDocs } from './function/matrix/reshape.js';\nimport { resizeDocs } from './function/matrix/resize.js';\nimport { rotateDocs } from './function/matrix/rotate.js';\nimport { rotationMatrixDocs } from './function/matrix/rotationMatrix.js';\nimport { rowDocs } from './function/matrix/row.js';\nimport { sizeDocs } from './function/matrix/size.js';\nimport { sortDocs } from './function/matrix/sort.js';\nimport { squeezeDocs } from './function/matrix/squeeze.js';\nimport { subsetDocs } from './function/matrix/subset.js';\nimport { traceDocs } from './function/matrix/trace.js';\nimport { transposeDocs } from './function/matrix/transpose.js';\nimport { zerosDocs } from './function/matrix/zeros.js';\nimport { fftDocs } from './function/matrix/fft.js';\nimport { ifftDocs } from './function/matrix/ifft.js';\nimport { combinationsDocs } from './function/probability/combinations.js';\nimport { combinationsWithRepDocs } from './function/probability/combinationsWithRep.js';\nimport { factorialDocs } from './function/probability/factorial.js';\nimport { gammaDocs } from './function/probability/gamma.js';\nimport { lgammaDocs } from './function/probability/lgamma.js';\nimport { kldivergenceDocs } from './function/probability/kldivergence.js';\nimport { multinomialDocs } from './function/probability/multinomial.js';\nimport { permutationsDocs } from './function/probability/permutations.js';\nimport { pickRandomDocs } from './function/probability/pickRandom.js';\nimport { randomDocs } from './function/probability/random.js';\nimport { randomIntDocs } from './function/probability/randomInt.js';\nimport { compareDocs } from './function/relational/compare.js';\nimport { compareNaturalDocs } from './function/relational/compareNatural.js';\nimport { compareTextDocs } from './function/relational/compareText.js';\nimport { deepEqualDocs } from './function/relational/deepEqual.js';\nimport { equalDocs } from './function/relational/equal.js';\nimport { equalTextDocs } from './function/relational/equalText.js';\nimport { largerDocs } from './function/relational/larger.js';\nimport { largerEqDocs } from './function/relational/largerEq.js';\nimport { smallerDocs } from './function/relational/smaller.js';\nimport { smallerEqDocs } from './function/relational/smallerEq.js';\nimport { unequalDocs } from './function/relational/unequal.js';\nimport { setCartesianDocs } from './function/set/setCartesian.js';\nimport { setDifferenceDocs } from './function/set/setDifference.js';\nimport { setDistinctDocs } from './function/set/setDistinct.js';\nimport { setIntersectDocs } from './function/set/setIntersect.js';\nimport { setIsSubsetDocs } from './function/set/setIsSubset.js';\nimport { setMultiplicityDocs } from './function/set/setMultiplicity.js';\nimport { setPowersetDocs } from './function/set/setPowerset.js';\nimport { setSizeDocs } from './function/set/setSize.js';\nimport { setSymDifferenceDocs } from './function/set/setSymDifference.js';\nimport { setUnionDocs } from './function/set/setUnion.js';\nimport { erfDocs } from './function/special/erf.js';\nimport { madDocs } from './function/statistics/mad.js';\nimport { maxDocs } from './function/statistics/max.js';\nimport { meanDocs } from './function/statistics/mean.js';\nimport { medianDocs } from './function/statistics/median.js';\nimport { minDocs } from './function/statistics/min.js';\nimport { modeDocs } from './function/statistics/mode.js';\nimport { prodDocs } from './function/statistics/prod.js';\nimport { quantileSeqDocs } from './function/statistics/quantileSeq.js';\nimport { stdDocs } from './function/statistics/std.js';\nimport { cumSumDocs } from './function/statistics/cumsum.js';\nimport { sumDocs } from './function/statistics/sum.js';\nimport { varianceDocs } from './function/statistics/variance.js';\nimport { acosDocs } from './function/trigonometry/acos.js';\nimport { acoshDocs } from './function/trigonometry/acosh.js';\nimport { acotDocs } from './function/trigonometry/acot.js';\nimport { acothDocs } from './function/trigonometry/acoth.js';\nimport { acscDocs } from './function/trigonometry/acsc.js';\nimport { acschDocs } from './function/trigonometry/acsch.js';\nimport { asecDocs } from './function/trigonometry/asec.js';\nimport { asechDocs } from './function/trigonometry/asech.js';\nimport { asinDocs } from './function/trigonometry/asin.js';\nimport { asinhDocs } from './function/trigonometry/asinh.js';\nimport { atanDocs } from './function/trigonometry/atan.js';\nimport { atan2Docs } from './function/trigonometry/atan2.js';\nimport { atanhDocs } from './function/trigonometry/atanh.js';\nimport { cosDocs } from './function/trigonometry/cos.js';\nimport { coshDocs } from './function/trigonometry/cosh.js';\nimport { cotDocs } from './function/trigonometry/cot.js';\nimport { cothDocs } from './function/trigonometry/coth.js';\nimport { cscDocs } from './function/trigonometry/csc.js';\nimport { cschDocs } from './function/trigonometry/csch.js';\nimport { secDocs } from './function/trigonometry/sec.js';\nimport { sechDocs } from './function/trigonometry/sech.js';\nimport { sinDocs } from './function/trigonometry/sin.js';\nimport { sinhDocs } from './function/trigonometry/sinh.js';\nimport { tanDocs } from './function/trigonometry/tan.js';\nimport { tanhDocs } from './function/trigonometry/tanh.js';\nimport { toDocs } from './function/units/to.js';\nimport { binDocs } from './function/utils/bin.js';\nimport { cloneDocs } from './function/utils/clone.js';\nimport { formatDocs } from './function/utils/format.js';\nimport { hasNumericValueDocs } from './function/utils/hasNumericValue.js';\nimport { hexDocs } from './function/utils/hex.js';\nimport { isIntegerDocs } from './function/utils/isInteger.js';\nimport { isNaNDocs } from './function/utils/isNaN.js';\nimport { isNegativeDocs } from './function/utils/isNegative.js';\nimport { isNumericDocs } from './function/utils/isNumeric.js';\nimport { isPositiveDocs } from './function/utils/isPositive.js';\nimport { isPrimeDocs } from './function/utils/isPrime.js';\nimport { isZeroDocs } from './function/utils/isZero.js';\nimport { numericDocs } from './function/utils/numeric.js';\nimport { octDocs } from './function/utils/oct.js';\nimport { printDocs } from './function/utils/print.js';\nimport { typeOfDocs } from './function/utils/typeOf.js';\nexport var embeddedDocs = {\n  // construction functions\n  bignumber: bignumberDocs,\n  boolean: booleanDocs,\n  complex: complexDocs,\n  createUnit: createUnitDocs,\n  fraction: fractionDocs,\n  index: indexDocs,\n  matrix: matrixDocs,\n  number: numberDocs,\n  sparse: sparseDocs,\n  splitUnit: splitUnitDocs,\n  string: stringDocs,\n  unit: unitDocs,\n  // constants\n  e: eDocs,\n  E: eDocs,\n  false: falseDocs,\n  i: iDocs,\n  Infinity: InfinityDocs,\n  LN2: LN2Docs,\n  LN10: LN10Docs,\n  LOG2E: LOG2EDocs,\n  LOG10E: LOG10EDocs,\n  NaN: NaNDocs,\n  null: nullDocs,\n  pi: piDocs,\n  PI: piDocs,\n  phi: phiDocs,\n  SQRT1_2: SQRT12Docs,\n  SQRT2: SQRT2Docs,\n  tau: tauDocs,\n  true: trueDocs,\n  version: versionDocs,\n  // physical constants\n  // TODO: more detailed docs for physical constants\n  speedOfLight: {\n    description: 'Speed of light in vacuum',\n    examples: ['speedOfLight']\n  },\n  gravitationConstant: {\n    description: 'Newtonian constant of gravitation',\n    examples: ['gravitationConstant']\n  },\n  planckConstant: {\n    description: 'Planck constant',\n    examples: ['planckConstant']\n  },\n  reducedPlanckConstant: {\n    description: 'Reduced Planck constant',\n    examples: ['reducedPlanckConstant']\n  },\n  magneticConstant: {\n    description: 'Magnetic constant (vacuum permeability)',\n    examples: ['magneticConstant']\n  },\n  electricConstant: {\n    description: 'Electric constant (vacuum permeability)',\n    examples: ['electricConstant']\n  },\n  vacuumImpedance: {\n    description: 'Characteristic impedance of vacuum',\n    examples: ['vacuumImpedance']\n  },\n  coulomb: {\n    description: 'Coulomb\\'s constant',\n    examples: ['coulomb']\n  },\n  elementaryCharge: {\n    description: 'Elementary charge',\n    examples: ['elementaryCharge']\n  },\n  bohrMagneton: {\n    description: 'Borh magneton',\n    examples: ['bohrMagneton']\n  },\n  conductanceQuantum: {\n    description: 'Conductance quantum',\n    examples: ['conductanceQuantum']\n  },\n  inverseConductanceQuantum: {\n    description: 'Inverse conductance quantum',\n    examples: ['inverseConductanceQuantum']\n  },\n  // josephson: {description: 'Josephson constant', examples: ['josephson']},\n  magneticFluxQuantum: {\n    description: 'Magnetic flux quantum',\n    examples: ['magneticFluxQuantum']\n  },\n  nuclearMagneton: {\n    description: 'Nuclear magneton',\n    examples: ['nuclearMagneton']\n  },\n  klitzing: {\n    description: 'Von Klitzing constant',\n    examples: ['klitzing']\n  },\n  bohrRadius: {\n    description: 'Borh radius',\n    examples: ['bohrRadius']\n  },\n  classicalElectronRadius: {\n    description: 'Classical electron radius',\n    examples: ['classicalElectronRadius']\n  },\n  electronMass: {\n    description: 'Electron mass',\n    examples: ['electronMass']\n  },\n  fermiCoupling: {\n    description: 'Fermi coupling constant',\n    examples: ['fermiCoupling']\n  },\n  fineStructure: {\n    description: 'Fine-structure constant',\n    examples: ['fineStructure']\n  },\n  hartreeEnergy: {\n    description: 'Hartree energy',\n    examples: ['hartreeEnergy']\n  },\n  protonMass: {\n    description: 'Proton mass',\n    examples: ['protonMass']\n  },\n  deuteronMass: {\n    description: 'Deuteron Mass',\n    examples: ['deuteronMass']\n  },\n  neutronMass: {\n    description: 'Neutron mass',\n    examples: ['neutronMass']\n  },\n  quantumOfCirculation: {\n    description: 'Quantum of circulation',\n    examples: ['quantumOfCirculation']\n  },\n  rydberg: {\n    description: 'Rydberg constant',\n    examples: ['rydberg']\n  },\n  thomsonCrossSection: {\n    description: 'Thomson cross section',\n    examples: ['thomsonCrossSection']\n  },\n  weakMixingAngle: {\n    description: 'Weak mixing angle',\n    examples: ['weakMixingAngle']\n  },\n  efimovFactor: {\n    description: 'Efimov factor',\n    examples: ['efimovFactor']\n  },\n  atomicMass: {\n    description: 'Atomic mass constant',\n    examples: ['atomicMass']\n  },\n  avogadro: {\n    description: 'Avogadro\\'s number',\n    examples: ['avogadro']\n  },\n  boltzmann: {\n    description: 'Boltzmann constant',\n    examples: ['boltzmann']\n  },\n  faraday: {\n    description: 'Faraday constant',\n    examples: ['faraday']\n  },\n  firstRadiation: {\n    description: 'First radiation constant',\n    examples: ['firstRadiation']\n  },\n  loschmidt: {\n    description: 'Loschmidt constant at T=273.15 K and p=101.325 kPa',\n    examples: ['loschmidt']\n  },\n  gasConstant: {\n    description: 'Gas constant',\n    examples: ['gasConstant']\n  },\n  molarPlanckConstant: {\n    description: 'Molar Planck constant',\n    examples: ['molarPlanckConstant']\n  },\n  molarVolume: {\n    description: 'Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa',\n    examples: ['molarVolume']\n  },\n  sackurTetrode: {\n    description: 'Sackur-Tetrode constant at T=1 K and p=101.325 kPa',\n    examples: ['sackurTetrode']\n  },\n  secondRadiation: {\n    description: 'Second radiation constant',\n    examples: ['secondRadiation']\n  },\n  stefanBoltzmann: {\n    description: 'Stefan-Boltzmann constant',\n    examples: ['stefanBoltzmann']\n  },\n  wienDisplacement: {\n    description: 'Wien displacement law constant',\n    examples: ['wienDisplacement']\n  },\n  // spectralRadiance: {description: 'First radiation constant for spectral radiance', examples: ['spectralRadiance']},\n  molarMass: {\n    description: 'Molar mass constant',\n    examples: ['molarMass']\n  },\n  molarMassC12: {\n    description: 'Molar mass constant of carbon-12',\n    examples: ['molarMassC12']\n  },\n  gravity: {\n    description: 'Standard acceleration of gravity (standard acceleration of free-fall on Earth)',\n    examples: ['gravity']\n  },\n  planckLength: {\n    description: 'Planck length',\n    examples: ['planckLength']\n  },\n  planckMass: {\n    description: 'Planck mass',\n    examples: ['planckMass']\n  },\n  planckTime: {\n    description: 'Planck time',\n    examples: ['planckTime']\n  },\n  planckCharge: {\n    description: 'Planck charge',\n    examples: ['planckCharge']\n  },\n  planckTemperature: {\n    description: 'Planck temperature',\n    examples: ['planckTemperature']\n  },\n  // functions - algebra\n  derivative: derivativeDocs,\n  lsolve: lsolveDocs,\n  lsolveAll: lsolveAllDocs,\n  lup: lupDocs,\n  lusolve: lusolveDocs,\n  leafCount: leafCountDocs,\n  polynomialRoot: polynomialRootDocs,\n  resolve: resolveDocs,\n  simplify: simplifyDocs,\n  simplifyConstant: simplifyConstantDocs,\n  simplifyCore: simplifyCoreDocs,\n  symbolicEqual: symbolicEqualDocs,\n  rationalize: rationalizeDocs,\n  slu: sluDocs,\n  usolve: usolveDocs,\n  usolveAll: usolveAllDocs,\n  qr: qrDocs,\n  // functions - arithmetic\n  abs: absDocs,\n  add: addDocs,\n  cbrt: cbrtDocs,\n  ceil: ceilDocs,\n  cube: cubeDocs,\n  divide: divideDocs,\n  dotDivide: dotDivideDocs,\n  dotMultiply: dotMultiplyDocs,\n  dotPow: dotPowDocs,\n  exp: expDocs,\n  expm: expmDocs,\n  expm1: expm1Docs,\n  fix: fixDocs,\n  floor: floorDocs,\n  gcd: gcdDocs,\n  hypot: hypotDocs,\n  lcm: lcmDocs,\n  log: logDocs,\n  log2: log2Docs,\n  log1p: log1pDocs,\n  log10: log10Docs,\n  mod: modDocs,\n  multiply: multiplyDocs,\n  norm: normDocs,\n  nthRoot: nthRootDocs,\n  nthRoots: nthRootsDocs,\n  pow: powDocs,\n  round: roundDocs,\n  sign: signDocs,\n  sqrt: sqrtDocs,\n  sqrtm: sqrtmDocs,\n  square: squareDocs,\n  subtract: subtractDocs,\n  unaryMinus: unaryMinusDocs,\n  unaryPlus: unaryPlusDocs,\n  xgcd: xgcdDocs,\n  invmod: invmodDocs,\n  // functions - bitwise\n  bitAnd: bitAndDocs,\n  bitNot: bitNotDocs,\n  bitOr: bitOrDocs,\n  bitXor: bitXorDocs,\n  leftShift: leftShiftDocs,\n  rightArithShift: rightArithShiftDocs,\n  rightLogShift: rightLogShiftDocs,\n  // functions - combinatorics\n  bellNumbers: bellNumbersDocs,\n  catalan: catalanDocs,\n  composition: compositionDocs,\n  stirlingS2: stirlingS2Docs,\n  // functions - core\n  config: configDocs,\n  import: importDocs,\n  typed: typedDocs,\n  // functions - complex\n  arg: argDocs,\n  conj: conjDocs,\n  re: reDocs,\n  im: imDocs,\n  // functions - expression\n  evaluate: evaluateDocs,\n  help: helpDocs,\n  // functions - geometry\n  distance: distanceDocs,\n  intersect: intersectDocs,\n  // functions - logical\n  and: andDocs,\n  not: notDocs,\n  or: orDocs,\n  xor: xorDocs,\n  // functions - matrix\n  concat: concatDocs,\n  count: countDocs,\n  cross: crossDocs,\n  column: columnDocs,\n  ctranspose: ctransposeDocs,\n  det: detDocs,\n  diag: diagDocs,\n  diff: diffDocs,\n  dot: dotDocs,\n  getMatrixDataType: getMatrixDataTypeDocs,\n  identity: identityDocs,\n  filter: filterDocs,\n  flatten: flattenDocs,\n  forEach: forEachDocs,\n  inv: invDocs,\n  pinv: pinvDocs,\n  eigs: eigsDocs,\n  kron: kronDocs,\n  matrixFromFunction: matrixFromFunctionDocs,\n  matrixFromRows: matrixFromRowsDocs,\n  matrixFromColumns: matrixFromColumnsDocs,\n  map: mapDocs,\n  ones: onesDocs,\n  partitionSelect: partitionSelectDocs,\n  range: rangeDocs,\n  resize: resizeDocs,\n  reshape: reshapeDocs,\n  rotate: rotateDocs,\n  rotationMatrix: rotationMatrixDocs,\n  row: rowDocs,\n  size: sizeDocs,\n  sort: sortDocs,\n  squeeze: squeezeDocs,\n  subset: subsetDocs,\n  trace: traceDocs,\n  transpose: transposeDocs,\n  zeros: zerosDocs,\n  fft: fftDocs,\n  ifft: ifftDocs,\n  sylvester: sylvesterDocs,\n  schur: schurDocs,\n  lyap: lyapDocs,\n  // functions - probability\n  combinations: combinationsDocs,\n  combinationsWithRep: combinationsWithRepDocs,\n  // distribution: distributionDocs,\n  factorial: factorialDocs,\n  gamma: gammaDocs,\n  kldivergence: kldivergenceDocs,\n  lgamma: lgammaDocs,\n  multinomial: multinomialDocs,\n  permutations: permutationsDocs,\n  pickRandom: pickRandomDocs,\n  random: randomDocs,\n  randomInt: randomIntDocs,\n  // functions - relational\n  compare: compareDocs,\n  compareNatural: compareNaturalDocs,\n  compareText: compareTextDocs,\n  deepEqual: deepEqualDocs,\n  equal: equalDocs,\n  equalText: equalTextDocs,\n  larger: largerDocs,\n  largerEq: largerEqDocs,\n  smaller: smallerDocs,\n  smallerEq: smallerEqDocs,\n  unequal: unequalDocs,\n  // functions - set\n  setCartesian: setCartesianDocs,\n  setDifference: setDifferenceDocs,\n  setDistinct: setDistinctDocs,\n  setIntersect: setIntersectDocs,\n  setIsSubset: setIsSubsetDocs,\n  setMultiplicity: setMultiplicityDocs,\n  setPowerset: setPowersetDocs,\n  setSize: setSizeDocs,\n  setSymDifference: setSymDifferenceDocs,\n  setUnion: setUnionDocs,\n  // functions - special\n  erf: erfDocs,\n  // functions - statistics\n  cumsum: cumSumDocs,\n  mad: madDocs,\n  max: maxDocs,\n  mean: meanDocs,\n  median: medianDocs,\n  min: minDocs,\n  mode: modeDocs,\n  prod: prodDocs,\n  quantileSeq: quantileSeqDocs,\n  std: stdDocs,\n  sum: sumDocs,\n  variance: varianceDocs,\n  // functions - trigonometry\n  acos: acosDocs,\n  acosh: acoshDocs,\n  acot: acotDocs,\n  acoth: acothDocs,\n  acsc: acscDocs,\n  acsch: acschDocs,\n  asec: asecDocs,\n  asech: asechDocs,\n  asin: asinDocs,\n  asinh: asinhDocs,\n  atan: atanDocs,\n  atanh: atanhDocs,\n  atan2: atan2Docs,\n  cos: cosDocs,\n  cosh: coshDocs,\n  cot: cotDocs,\n  coth: cothDocs,\n  csc: cscDocs,\n  csch: cschDocs,\n  sec: secDocs,\n  sech: sechDocs,\n  sin: sinDocs,\n  sinh: sinhDocs,\n  tan: tanDocs,\n  tanh: tanhDocs,\n  // functions - units\n  to: toDocs,\n  // functions - utils\n  clone: cloneDocs,\n  format: formatDocs,\n  bin: binDocs,\n  oct: octDocs,\n  hex: hexDocs,\n  isNaN: isNaNDocs,\n  isInteger: isIntegerDocs,\n  isNegative: isNegativeDocs,\n  isNumeric: isNumericDocs,\n  hasNumericValue: hasNumericValueDocs,\n  isPositive: isPositiveDocs,\n  isPrime: isPrimeDocs,\n  isZero: isZeroDocs,\n  print: printDocs,\n  typeOf: typeOfDocs,\n  numeric: numericDocs\n};","map":{"version":3,"sources":["C:/Users/jhonc/Desktop/CALCULADORA/queueing-theory-calculator/node_modules/mathjs/lib/esm/expression/embeddedDocs/embeddedDocs.js"],"names":["eDocs","falseDocs","iDocs","InfinityDocs","LN10Docs","LN2Docs","LOG10EDocs","LOG2EDocs","NaNDocs","nullDocs","phiDocs","piDocs","SQRT12Docs","SQRT2Docs","tauDocs","trueDocs","versionDocs","bignumberDocs","booleanDocs","complexDocs","createUnitDocs","fractionDocs","indexDocs","matrixDocs","numberDocs","sparseDocs","splitUnitDocs","stringDocs","unitDocs","configDocs","importDocs","typedDocs","derivativeDocs","leafCountDocs","lsolveDocs","lsolveAllDocs","lupDocs","lusolveDocs","polynomialRootDocs","qrDocs","rationalizeDocs","resolveDocs","simplifyDocs","simplifyConstantDocs","simplifyCoreDocs","sluDocs","symbolicEqualDocs","usolveDocs","usolveAllDocs","absDocs","addDocs","cbrtDocs","ceilDocs","cubeDocs","divideDocs","dotDivideDocs","dotMultiplyDocs","dotPowDocs","expDocs","expmDocs","expm1Docs","fixDocs","floorDocs","gcdDocs","hypotDocs","invmodDocs","lcmDocs","logDocs","log10Docs","log1pDocs","log2Docs","modDocs","multiplyDocs","normDocs","nthRootDocs","nthRootsDocs","powDocs","roundDocs","signDocs","sqrtDocs","sqrtmDocs","sylvesterDocs","schurDocs","lyapDocs","squareDocs","subtractDocs","unaryMinusDocs","unaryPlusDocs","xgcdDocs","bitAndDocs","bitNotDocs","bitOrDocs","bitXorDocs","leftShiftDocs","rightArithShiftDocs","rightLogShiftDocs","bellNumbersDocs","catalanDocs","compositionDocs","stirlingS2Docs","argDocs","conjDocs","imDocs","reDocs","evaluateDocs","helpDocs","distanceDocs","intersectDocs","andDocs","notDocs","orDocs","xorDocs","columnDocs","concatDocs","countDocs","crossDocs","ctransposeDocs","detDocs","diagDocs","diffDocs","dotDocs","eigsDocs","filterDocs","flattenDocs","forEachDocs","getMatrixDataTypeDocs","identityDocs","invDocs","pinvDocs","kronDocs","mapDocs","matrixFromColumnsDocs","matrixFromFunctionDocs","matrixFromRowsDocs","onesDocs","partitionSelectDocs","rangeDocs","reshapeDocs","resizeDocs","rotateDocs","rotationMatrixDocs","rowDocs","sizeDocs","sortDocs","squeezeDocs","subsetDocs","traceDocs","transposeDocs","zerosDocs","fftDocs","ifftDocs","combinationsDocs","combinationsWithRepDocs","factorialDocs","gammaDocs","lgammaDocs","kldivergenceDocs","multinomialDocs","permutationsDocs","pickRandomDocs","randomDocs","randomIntDocs","compareDocs","compareNaturalDocs","compareTextDocs","deepEqualDocs","equalDocs","equalTextDocs","largerDocs","largerEqDocs","smallerDocs","smallerEqDocs","unequalDocs","setCartesianDocs","setDifferenceDocs","setDistinctDocs","setIntersectDocs","setIsSubsetDocs","setMultiplicityDocs","setPowersetDocs","setSizeDocs","setSymDifferenceDocs","setUnionDocs","erfDocs","madDocs","maxDocs","meanDocs","medianDocs","minDocs","modeDocs","prodDocs","quantileSeqDocs","stdDocs","cumSumDocs","sumDocs","varianceDocs","acosDocs","acoshDocs","acotDocs","acothDocs","acscDocs","acschDocs","asecDocs","asechDocs","asinDocs","asinhDocs","atanDocs","atan2Docs","atanhDocs","cosDocs","coshDocs","cotDocs","cothDocs","cscDocs","cschDocs","secDocs","sechDocs","sinDocs","sinhDocs","tanDocs","tanhDocs","toDocs","binDocs","cloneDocs","formatDocs","hasNumericValueDocs","hexDocs","isIntegerDocs","isNaNDocs","isNegativeDocs","isNumericDocs","isPositiveDocs","isPrimeDocs","isZeroDocs","numericDocs","octDocs","printDocs","typeOfDocs","embeddedDocs","bignumber","boolean","complex","createUnit","fraction","index","matrix","number","sparse","splitUnit","string","unit","e","E","false","i","Infinity","LN2","LN10","LOG2E","LOG10E","NaN","null","pi","PI","phi","SQRT1_2","SQRT2","tau","true","version","speedOfLight","description","examples","gravitationConstant","planckConstant","reducedPlanckConstant","magneticConstant","electricConstant","vacuumImpedance","coulomb","elementaryCharge","bohrMagneton","conductanceQuantum","inverseConductanceQuantum","magneticFluxQuantum","nuclearMagneton","klitzing","bohrRadius","classicalElectronRadius","electronMass","fermiCoupling","fineStructure","hartreeEnergy","protonMass","deuteronMass","neutronMass","quantumOfCirculation","rydberg","thomsonCrossSection","weakMixingAngle","efimovFactor","atomicMass","avogadro","boltzmann","faraday","firstRadiation","loschmidt","gasConstant","molarPlanckConstant","molarVolume","sackurTetrode","secondRadiation","stefanBoltzmann","wienDisplacement","molarMass","molarMassC12","gravity","planckLength","planckMass","planckTime","planckCharge","planckTemperature","derivative","lsolve","lsolveAll","lup","lusolve","leafCount","polynomialRoot","resolve","simplify","simplifyConstant","simplifyCore","symbolicEqual","rationalize","slu","usolve","usolveAll","qr","abs","add","cbrt","ceil","cube","divide","dotDivide","dotMultiply","dotPow","exp","expm","expm1","fix","floor","gcd","hypot","lcm","log","log2","log1p","log10","mod","multiply","norm","nthRoot","nthRoots","pow","round","sign","sqrt","sqrtm","square","subtract","unaryMinus","unaryPlus","xgcd","invmod","bitAnd","bitNot","bitOr","bitXor","leftShift","rightArithShift","rightLogShift","bellNumbers","catalan","composition","stirlingS2","config","import","typed","arg","conj","re","im","evaluate","help","distance","intersect","and","not","or","xor","concat","count","cross","column","ctranspose","det","diag","diff","dot","getMatrixDataType","identity","filter","flatten","forEach","inv","pinv","eigs","kron","matrixFromFunction","matrixFromRows","matrixFromColumns","map","ones","partitionSelect","range","resize","reshape","rotate","rotationMatrix","row","size","sort","squeeze","subset","trace","transpose","zeros","fft","ifft","sylvester","schur","lyap","combinations","combinationsWithRep","factorial","gamma","kldivergence","lgamma","multinomial","permutations","pickRandom","random","randomInt","compare","compareNatural","compareText","deepEqual","equal","equalText","larger","largerEq","smaller","smallerEq","unequal","setCartesian","setDifference","setDistinct","setIntersect","setIsSubset","setMultiplicity","setPowerset","setSize","setSymDifference","setUnion","erf","cumsum","mad","max","mean","median","min","mode","prod","quantileSeq","std","sum","variance","acos","acosh","acot","acoth","acsc","acsch","asec","asech","asin","asinh","atan","atanh","atan2","cos","cosh","cot","coth","csc","csch","sec","sech","sin","sinh","tan","tanh","to","clone","format","bin","oct","hex","isNaN","isInteger","isNegative","isNumeric","hasNumericValue","isPositive","isPrime","isZero","print","typeOf","numeric"],"mappings":"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","sourcesContent":["import { eDocs } from './constants/e.js';\nimport { falseDocs } from './constants/false.js';\nimport { iDocs } from './constants/i.js';\nimport { InfinityDocs } from './constants/Infinity.js';\nimport { LN10Docs } from './constants/LN10.js';\nimport { LN2Docs } from './constants/LN2.js';\nimport { LOG10EDocs } from './constants/LOG10E.js';\nimport { LOG2EDocs } from './constants/LOG2E.js';\nimport { NaNDocs } from './constants/NaN.js';\nimport { nullDocs } from './constants/null.js';\nimport { phiDocs } from './constants/phi.js';\nimport { piDocs } from './constants/pi.js';\nimport { SQRT12Docs } from './constants/SQRT1_2.js';\nimport { SQRT2Docs } from './constants/SQRT2.js';\nimport { tauDocs } from './constants/tau.js';\nimport { trueDocs } from './constants/true.js';\nimport { versionDocs } from './constants/version.js';\nimport { bignumberDocs } from './construction/bignumber.js';\nimport { booleanDocs } from './construction/boolean.js';\nimport { complexDocs } from './construction/complex.js';\nimport { createUnitDocs } from './construction/createUnit.js';\nimport { fractionDocs } from './construction/fraction.js';\nimport { indexDocs } from './construction/index.js';\nimport { matrixDocs } from './construction/matrix.js';\nimport { numberDocs } from './construction/number.js';\nimport { sparseDocs } from './construction/sparse.js';\nimport { splitUnitDocs } from './construction/splitUnit.js';\nimport { stringDocs } from './construction/string.js';\nimport { unitDocs } from './construction/unit.js';\nimport { configDocs } from './core/config.js';\nimport { importDocs } from './core/import.js';\nimport { typedDocs } from './core/typed.js';\nimport { derivativeDocs } from './function/algebra/derivative.js';\nimport { leafCountDocs } from './function/algebra/leafCount.js';\nimport { lsolveDocs } from './function/algebra/lsolve.js';\nimport { lsolveAllDocs } from './function/algebra/lsolveAll.js';\nimport { lupDocs } from './function/algebra/lup.js';\nimport { lusolveDocs } from './function/algebra/lusolve.js';\nimport { polynomialRootDocs } from './function/algebra/polynomialRoot.js';\nimport { qrDocs } from './function/algebra/qr.js';\nimport { rationalizeDocs } from './function/algebra/rationalize.js';\nimport { resolveDocs } from './function/algebra/resolve.js';\nimport { simplifyDocs } from './function/algebra/simplify.js';\nimport { simplifyConstantDocs } from './function/algebra/simplifyConstant.js';\nimport { simplifyCoreDocs } from './function/algebra/simplifyCore.js';\nimport { sluDocs } from './function/algebra/slu.js';\nimport { symbolicEqualDocs } from './function/algebra/symbolicEqual.js';\nimport { usolveDocs } from './function/algebra/usolve.js';\nimport { usolveAllDocs } from './function/algebra/usolveAll.js';\nimport { absDocs } from './function/arithmetic/abs.js';\nimport { addDocs } from './function/arithmetic/add.js';\nimport { cbrtDocs } from './function/arithmetic/cbrt.js';\nimport { ceilDocs } from './function/arithmetic/ceil.js';\nimport { cubeDocs } from './function/arithmetic/cube.js';\nimport { divideDocs } from './function/arithmetic/divide.js';\nimport { dotDivideDocs } from './function/arithmetic/dotDivide.js';\nimport { dotMultiplyDocs } from './function/arithmetic/dotMultiply.js';\nimport { dotPowDocs } from './function/arithmetic/dotPow.js';\nimport { expDocs } from './function/arithmetic/exp.js';\nimport { expmDocs } from './function/arithmetic/expm.js';\nimport { expm1Docs } from './function/arithmetic/expm1.js';\nimport { fixDocs } from './function/arithmetic/fix.js';\nimport { floorDocs } from './function/arithmetic/floor.js';\nimport { gcdDocs } from './function/arithmetic/gcd.js';\nimport { hypotDocs } from './function/arithmetic/hypot.js';\nimport { invmodDocs } from './function/arithmetic/invmod.js';\nimport { lcmDocs } from './function/arithmetic/lcm.js';\nimport { logDocs } from './function/arithmetic/log.js';\nimport { log10Docs } from './function/arithmetic/log10.js';\nimport { log1pDocs } from './function/arithmetic/log1p.js';\nimport { log2Docs } from './function/arithmetic/log2.js';\nimport { modDocs } from './function/arithmetic/mod.js';\nimport { multiplyDocs } from './function/arithmetic/multiply.js';\nimport { normDocs } from './function/arithmetic/norm.js';\nimport { nthRootDocs } from './function/arithmetic/nthRoot.js';\nimport { nthRootsDocs } from './function/arithmetic/nthRoots.js';\nimport { powDocs } from './function/arithmetic/pow.js';\nimport { roundDocs } from './function/arithmetic/round.js';\nimport { signDocs } from './function/arithmetic/sign.js';\nimport { sqrtDocs } from './function/arithmetic/sqrt.js';\nimport { sqrtmDocs } from './function/arithmetic/sqrtm.js';\nimport { sylvesterDocs } from './function/matrix/sylvester.js';\nimport { schurDocs } from './function/matrix/schur.js';\nimport { lyapDocs } from './function/matrix/lyap.js';\nimport { squareDocs } from './function/arithmetic/square.js';\nimport { subtractDocs } from './function/arithmetic/subtract.js';\nimport { unaryMinusDocs } from './function/arithmetic/unaryMinus.js';\nimport { unaryPlusDocs } from './function/arithmetic/unaryPlus.js';\nimport { xgcdDocs } from './function/arithmetic/xgcd.js';\nimport { bitAndDocs } from './function/bitwise/bitAnd.js';\nimport { bitNotDocs } from './function/bitwise/bitNot.js';\nimport { bitOrDocs } from './function/bitwise/bitOr.js';\nimport { bitXorDocs } from './function/bitwise/bitXor.js';\nimport { leftShiftDocs } from './function/bitwise/leftShift.js';\nimport { rightArithShiftDocs } from './function/bitwise/rightArithShift.js';\nimport { rightLogShiftDocs } from './function/bitwise/rightLogShift.js';\nimport { bellNumbersDocs } from './function/combinatorics/bellNumbers.js';\nimport { catalanDocs } from './function/combinatorics/catalan.js';\nimport { compositionDocs } from './function/combinatorics/composition.js';\nimport { stirlingS2Docs } from './function/combinatorics/stirlingS2.js';\nimport { argDocs } from './function/complex/arg.js';\nimport { conjDocs } from './function/complex/conj.js';\nimport { imDocs } from './function/complex/im.js';\nimport { reDocs } from './function/complex/re.js';\nimport { evaluateDocs } from './function/expression/evaluate.js';\nimport { helpDocs } from './function/expression/help.js';\nimport { distanceDocs } from './function/geometry/distance.js';\nimport { intersectDocs } from './function/geometry/intersect.js';\nimport { andDocs } from './function/logical/and.js';\nimport { notDocs } from './function/logical/not.js';\nimport { orDocs } from './function/logical/or.js';\nimport { xorDocs } from './function/logical/xor.js';\nimport { columnDocs } from './function/matrix/column.js';\nimport { concatDocs } from './function/matrix/concat.js';\nimport { countDocs } from './function/matrix/count.js';\nimport { crossDocs } from './function/matrix/cross.js';\nimport { ctransposeDocs } from './function/matrix/ctranspose.js';\nimport { detDocs } from './function/matrix/det.js';\nimport { diagDocs } from './function/matrix/diag.js';\nimport { diffDocs } from './function/matrix/diff.js';\nimport { dotDocs } from './function/matrix/dot.js';\nimport { eigsDocs } from './function/matrix/eigs.js';\nimport { filterDocs } from './function/matrix/filter.js';\nimport { flattenDocs } from './function/matrix/flatten.js';\nimport { forEachDocs } from './function/matrix/forEach.js';\nimport { getMatrixDataTypeDocs } from './function/matrix/getMatrixDataType.js';\nimport { identityDocs } from './function/matrix/identity.js';\nimport { invDocs } from './function/matrix/inv.js';\nimport { pinvDocs } from './function/matrix/pinv.js';\nimport { kronDocs } from './function/matrix/kron.js';\nimport { mapDocs } from './function/matrix/map.js';\nimport { matrixFromColumnsDocs } from './function/matrix/matrixFromColumns.js';\nimport { matrixFromFunctionDocs } from './function/matrix/matrixFromFunction.js';\nimport { matrixFromRowsDocs } from './function/matrix/matrixFromRows.js';\nimport { onesDocs } from './function/matrix/ones.js';\nimport { partitionSelectDocs } from './function/matrix/partitionSelect.js';\nimport { rangeDocs } from './function/matrix/range.js';\nimport { reshapeDocs } from './function/matrix/reshape.js';\nimport { resizeDocs } from './function/matrix/resize.js';\nimport { rotateDocs } from './function/matrix/rotate.js';\nimport { rotationMatrixDocs } from './function/matrix/rotationMatrix.js';\nimport { rowDocs } from './function/matrix/row.js';\nimport { sizeDocs } from './function/matrix/size.js';\nimport { sortDocs } from './function/matrix/sort.js';\nimport { squeezeDocs } from './function/matrix/squeeze.js';\nimport { subsetDocs } from './function/matrix/subset.js';\nimport { traceDocs } from './function/matrix/trace.js';\nimport { transposeDocs } from './function/matrix/transpose.js';\nimport { zerosDocs } from './function/matrix/zeros.js';\nimport { fftDocs } from './function/matrix/fft.js';\nimport { ifftDocs } from './function/matrix/ifft.js';\nimport { combinationsDocs } from './function/probability/combinations.js';\nimport { combinationsWithRepDocs } from './function/probability/combinationsWithRep.js';\nimport { factorialDocs } from './function/probability/factorial.js';\nimport { gammaDocs } from './function/probability/gamma.js';\nimport { lgammaDocs } from './function/probability/lgamma.js';\nimport { kldivergenceDocs } from './function/probability/kldivergence.js';\nimport { multinomialDocs } from './function/probability/multinomial.js';\nimport { permutationsDocs } from './function/probability/permutations.js';\nimport { pickRandomDocs } from './function/probability/pickRandom.js';\nimport { randomDocs } from './function/probability/random.js';\nimport { randomIntDocs } from './function/probability/randomInt.js';\nimport { compareDocs } from './function/relational/compare.js';\nimport { compareNaturalDocs } from './function/relational/compareNatural.js';\nimport { compareTextDocs } from './function/relational/compareText.js';\nimport { deepEqualDocs } from './function/relational/deepEqual.js';\nimport { equalDocs } from './function/relational/equal.js';\nimport { equalTextDocs } from './function/relational/equalText.js';\nimport { largerDocs } from './function/relational/larger.js';\nimport { largerEqDocs } from './function/relational/largerEq.js';\nimport { smallerDocs } from './function/relational/smaller.js';\nimport { smallerEqDocs } from './function/relational/smallerEq.js';\nimport { unequalDocs } from './function/relational/unequal.js';\nimport { setCartesianDocs } from './function/set/setCartesian.js';\nimport { setDifferenceDocs } from './function/set/setDifference.js';\nimport { setDistinctDocs } from './function/set/setDistinct.js';\nimport { setIntersectDocs } from './function/set/setIntersect.js';\nimport { setIsSubsetDocs } from './function/set/setIsSubset.js';\nimport { setMultiplicityDocs } from './function/set/setMultiplicity.js';\nimport { setPowersetDocs } from './function/set/setPowerset.js';\nimport { setSizeDocs } from './function/set/setSize.js';\nimport { setSymDifferenceDocs } from './function/set/setSymDifference.js';\nimport { setUnionDocs } from './function/set/setUnion.js';\nimport { erfDocs } from './function/special/erf.js';\nimport { madDocs } from './function/statistics/mad.js';\nimport { maxDocs } from './function/statistics/max.js';\nimport { meanDocs } from './function/statistics/mean.js';\nimport { medianDocs } from './function/statistics/median.js';\nimport { minDocs } from './function/statistics/min.js';\nimport { modeDocs } from './function/statistics/mode.js';\nimport { prodDocs } from './function/statistics/prod.js';\nimport { quantileSeqDocs } from './function/statistics/quantileSeq.js';\nimport { stdDocs } from './function/statistics/std.js';\nimport { cumSumDocs } from './function/statistics/cumsum.js';\nimport { sumDocs } from './function/statistics/sum.js';\nimport { varianceDocs } from './function/statistics/variance.js';\nimport { acosDocs } from './function/trigonometry/acos.js';\nimport { acoshDocs } from './function/trigonometry/acosh.js';\nimport { acotDocs } from './function/trigonometry/acot.js';\nimport { acothDocs } from './function/trigonometry/acoth.js';\nimport { acscDocs } from './function/trigonometry/acsc.js';\nimport { acschDocs } from './function/trigonometry/acsch.js';\nimport { asecDocs } from './function/trigonometry/asec.js';\nimport { asechDocs } from './function/trigonometry/asech.js';\nimport { asinDocs } from './function/trigonometry/asin.js';\nimport { asinhDocs } from './function/trigonometry/asinh.js';\nimport { atanDocs } from './function/trigonometry/atan.js';\nimport { atan2Docs } from './function/trigonometry/atan2.js';\nimport { atanhDocs } from './function/trigonometry/atanh.js';\nimport { cosDocs } from './function/trigonometry/cos.js';\nimport { coshDocs } from './function/trigonometry/cosh.js';\nimport { cotDocs } from './function/trigonometry/cot.js';\nimport { cothDocs } from './function/trigonometry/coth.js';\nimport { cscDocs } from './function/trigonometry/csc.js';\nimport { cschDocs } from './function/trigonometry/csch.js';\nimport { secDocs } from './function/trigonometry/sec.js';\nimport { sechDocs } from './function/trigonometry/sech.js';\nimport { sinDocs } from './function/trigonometry/sin.js';\nimport { sinhDocs } from './function/trigonometry/sinh.js';\nimport { tanDocs } from './function/trigonometry/tan.js';\nimport { tanhDocs } from './function/trigonometry/tanh.js';\nimport { toDocs } from './function/units/to.js';\nimport { binDocs } from './function/utils/bin.js';\nimport { cloneDocs } from './function/utils/clone.js';\nimport { formatDocs } from './function/utils/format.js';\nimport { hasNumericValueDocs } from './function/utils/hasNumericValue.js';\nimport { hexDocs } from './function/utils/hex.js';\nimport { isIntegerDocs } from './function/utils/isInteger.js';\nimport { isNaNDocs } from './function/utils/isNaN.js';\nimport { isNegativeDocs } from './function/utils/isNegative.js';\nimport { isNumericDocs } from './function/utils/isNumeric.js';\nimport { isPositiveDocs } from './function/utils/isPositive.js';\nimport { isPrimeDocs } from './function/utils/isPrime.js';\nimport { isZeroDocs } from './function/utils/isZero.js';\nimport { numericDocs } from './function/utils/numeric.js';\nimport { octDocs } from './function/utils/oct.js';\nimport { printDocs } from './function/utils/print.js';\nimport { typeOfDocs } from './function/utils/typeOf.js';\nexport var embeddedDocs = {\n  // construction functions\n  bignumber: bignumberDocs,\n  boolean: booleanDocs,\n  complex: complexDocs,\n  createUnit: createUnitDocs,\n  fraction: fractionDocs,\n  index: indexDocs,\n  matrix: matrixDocs,\n  number: numberDocs,\n  sparse: sparseDocs,\n  splitUnit: splitUnitDocs,\n  string: stringDocs,\n  unit: unitDocs,\n  // constants\n  e: eDocs,\n  E: eDocs,\n  false: falseDocs,\n  i: iDocs,\n  Infinity: InfinityDocs,\n  LN2: LN2Docs,\n  LN10: LN10Docs,\n  LOG2E: LOG2EDocs,\n  LOG10E: LOG10EDocs,\n  NaN: NaNDocs,\n  null: nullDocs,\n  pi: piDocs,\n  PI: piDocs,\n  phi: phiDocs,\n  SQRT1_2: SQRT12Docs,\n  SQRT2: SQRT2Docs,\n  tau: tauDocs,\n  true: trueDocs,\n  version: versionDocs,\n  // physical constants\n  // TODO: more detailed docs for physical constants\n  speedOfLight: {\n    description: 'Speed of light in vacuum',\n    examples: ['speedOfLight']\n  },\n  gravitationConstant: {\n    description: 'Newtonian constant of gravitation',\n    examples: ['gravitationConstant']\n  },\n  planckConstant: {\n    description: 'Planck constant',\n    examples: ['planckConstant']\n  },\n  reducedPlanckConstant: {\n    description: 'Reduced Planck constant',\n    examples: ['reducedPlanckConstant']\n  },\n  magneticConstant: {\n    description: 'Magnetic constant (vacuum permeability)',\n    examples: ['magneticConstant']\n  },\n  electricConstant: {\n    description: 'Electric constant (vacuum permeability)',\n    examples: ['electricConstant']\n  },\n  vacuumImpedance: {\n    description: 'Characteristic impedance of vacuum',\n    examples: ['vacuumImpedance']\n  },\n  coulomb: {\n    description: 'Coulomb\\'s constant',\n    examples: ['coulomb']\n  },\n  elementaryCharge: {\n    description: 'Elementary charge',\n    examples: ['elementaryCharge']\n  },\n  bohrMagneton: {\n    description: 'Borh magneton',\n    examples: ['bohrMagneton']\n  },\n  conductanceQuantum: {\n    description: 'Conductance quantum',\n    examples: ['conductanceQuantum']\n  },\n  inverseConductanceQuantum: {\n    description: 'Inverse conductance quantum',\n    examples: ['inverseConductanceQuantum']\n  },\n  // josephson: {description: 'Josephson constant', examples: ['josephson']},\n  magneticFluxQuantum: {\n    description: 'Magnetic flux quantum',\n    examples: ['magneticFluxQuantum']\n  },\n  nuclearMagneton: {\n    description: 'Nuclear magneton',\n    examples: ['nuclearMagneton']\n  },\n  klitzing: {\n    description: 'Von Klitzing constant',\n    examples: ['klitzing']\n  },\n  bohrRadius: {\n    description: 'Borh radius',\n    examples: ['bohrRadius']\n  },\n  classicalElectronRadius: {\n    description: 'Classical electron radius',\n    examples: ['classicalElectronRadius']\n  },\n  electronMass: {\n    description: 'Electron mass',\n    examples: ['electronMass']\n  },\n  fermiCoupling: {\n    description: 'Fermi coupling constant',\n    examples: ['fermiCoupling']\n  },\n  fineStructure: {\n    description: 'Fine-structure constant',\n    examples: ['fineStructure']\n  },\n  hartreeEnergy: {\n    description: 'Hartree energy',\n    examples: ['hartreeEnergy']\n  },\n  protonMass: {\n    description: 'Proton mass',\n    examples: ['protonMass']\n  },\n  deuteronMass: {\n    description: 'Deuteron Mass',\n    examples: ['deuteronMass']\n  },\n  neutronMass: {\n    description: 'Neutron mass',\n    examples: ['neutronMass']\n  },\n  quantumOfCirculation: {\n    description: 'Quantum of circulation',\n    examples: ['quantumOfCirculation']\n  },\n  rydberg: {\n    description: 'Rydberg constant',\n    examples: ['rydberg']\n  },\n  thomsonCrossSection: {\n    description: 'Thomson cross section',\n    examples: ['thomsonCrossSection']\n  },\n  weakMixingAngle: {\n    description: 'Weak mixing angle',\n    examples: ['weakMixingAngle']\n  },\n  efimovFactor: {\n    description: 'Efimov factor',\n    examples: ['efimovFactor']\n  },\n  atomicMass: {\n    description: 'Atomic mass constant',\n    examples: ['atomicMass']\n  },\n  avogadro: {\n    description: 'Avogadro\\'s number',\n    examples: ['avogadro']\n  },\n  boltzmann: {\n    description: 'Boltzmann constant',\n    examples: ['boltzmann']\n  },\n  faraday: {\n    description: 'Faraday constant',\n    examples: ['faraday']\n  },\n  firstRadiation: {\n    description: 'First radiation constant',\n    examples: ['firstRadiation']\n  },\n  loschmidt: {\n    description: 'Loschmidt constant at T=273.15 K and p=101.325 kPa',\n    examples: ['loschmidt']\n  },\n  gasConstant: {\n    description: 'Gas constant',\n    examples: ['gasConstant']\n  },\n  molarPlanckConstant: {\n    description: 'Molar Planck constant',\n    examples: ['molarPlanckConstant']\n  },\n  molarVolume: {\n    description: 'Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa',\n    examples: ['molarVolume']\n  },\n  sackurTetrode: {\n    description: 'Sackur-Tetrode constant at T=1 K and p=101.325 kPa',\n    examples: ['sackurTetrode']\n  },\n  secondRadiation: {\n    description: 'Second radiation constant',\n    examples: ['secondRadiation']\n  },\n  stefanBoltzmann: {\n    description: 'Stefan-Boltzmann constant',\n    examples: ['stefanBoltzmann']\n  },\n  wienDisplacement: {\n    description: 'Wien displacement law constant',\n    examples: ['wienDisplacement']\n  },\n  // spectralRadiance: {description: 'First radiation constant for spectral radiance', examples: ['spectralRadiance']},\n\n  molarMass: {\n    description: 'Molar mass constant',\n    examples: ['molarMass']\n  },\n  molarMassC12: {\n    description: 'Molar mass constant of carbon-12',\n    examples: ['molarMassC12']\n  },\n  gravity: {\n    description: 'Standard acceleration of gravity (standard acceleration of free-fall on Earth)',\n    examples: ['gravity']\n  },\n  planckLength: {\n    description: 'Planck length',\n    examples: ['planckLength']\n  },\n  planckMass: {\n    description: 'Planck mass',\n    examples: ['planckMass']\n  },\n  planckTime: {\n    description: 'Planck time',\n    examples: ['planckTime']\n  },\n  planckCharge: {\n    description: 'Planck charge',\n    examples: ['planckCharge']\n  },\n  planckTemperature: {\n    description: 'Planck temperature',\n    examples: ['planckTemperature']\n  },\n  // functions - algebra\n  derivative: derivativeDocs,\n  lsolve: lsolveDocs,\n  lsolveAll: lsolveAllDocs,\n  lup: lupDocs,\n  lusolve: lusolveDocs,\n  leafCount: leafCountDocs,\n  polynomialRoot: polynomialRootDocs,\n  resolve: resolveDocs,\n  simplify: simplifyDocs,\n  simplifyConstant: simplifyConstantDocs,\n  simplifyCore: simplifyCoreDocs,\n  symbolicEqual: symbolicEqualDocs,\n  rationalize: rationalizeDocs,\n  slu: sluDocs,\n  usolve: usolveDocs,\n  usolveAll: usolveAllDocs,\n  qr: qrDocs,\n  // functions - arithmetic\n  abs: absDocs,\n  add: addDocs,\n  cbrt: cbrtDocs,\n  ceil: ceilDocs,\n  cube: cubeDocs,\n  divide: divideDocs,\n  dotDivide: dotDivideDocs,\n  dotMultiply: dotMultiplyDocs,\n  dotPow: dotPowDocs,\n  exp: expDocs,\n  expm: expmDocs,\n  expm1: expm1Docs,\n  fix: fixDocs,\n  floor: floorDocs,\n  gcd: gcdDocs,\n  hypot: hypotDocs,\n  lcm: lcmDocs,\n  log: logDocs,\n  log2: log2Docs,\n  log1p: log1pDocs,\n  log10: log10Docs,\n  mod: modDocs,\n  multiply: multiplyDocs,\n  norm: normDocs,\n  nthRoot: nthRootDocs,\n  nthRoots: nthRootsDocs,\n  pow: powDocs,\n  round: roundDocs,\n  sign: signDocs,\n  sqrt: sqrtDocs,\n  sqrtm: sqrtmDocs,\n  square: squareDocs,\n  subtract: subtractDocs,\n  unaryMinus: unaryMinusDocs,\n  unaryPlus: unaryPlusDocs,\n  xgcd: xgcdDocs,\n  invmod: invmodDocs,\n  // functions - bitwise\n  bitAnd: bitAndDocs,\n  bitNot: bitNotDocs,\n  bitOr: bitOrDocs,\n  bitXor: bitXorDocs,\n  leftShift: leftShiftDocs,\n  rightArithShift: rightArithShiftDocs,\n  rightLogShift: rightLogShiftDocs,\n  // functions - combinatorics\n  bellNumbers: bellNumbersDocs,\n  catalan: catalanDocs,\n  composition: compositionDocs,\n  stirlingS2: stirlingS2Docs,\n  // functions - core\n  config: configDocs,\n  import: importDocs,\n  typed: typedDocs,\n  // functions - complex\n  arg: argDocs,\n  conj: conjDocs,\n  re: reDocs,\n  im: imDocs,\n  // functions - expression\n  evaluate: evaluateDocs,\n  help: helpDocs,\n  // functions - geometry\n  distance: distanceDocs,\n  intersect: intersectDocs,\n  // functions - logical\n  and: andDocs,\n  not: notDocs,\n  or: orDocs,\n  xor: xorDocs,\n  // functions - matrix\n  concat: concatDocs,\n  count: countDocs,\n  cross: crossDocs,\n  column: columnDocs,\n  ctranspose: ctransposeDocs,\n  det: detDocs,\n  diag: diagDocs,\n  diff: diffDocs,\n  dot: dotDocs,\n  getMatrixDataType: getMatrixDataTypeDocs,\n  identity: identityDocs,\n  filter: filterDocs,\n  flatten: flattenDocs,\n  forEach: forEachDocs,\n  inv: invDocs,\n  pinv: pinvDocs,\n  eigs: eigsDocs,\n  kron: kronDocs,\n  matrixFromFunction: matrixFromFunctionDocs,\n  matrixFromRows: matrixFromRowsDocs,\n  matrixFromColumns: matrixFromColumnsDocs,\n  map: mapDocs,\n  ones: onesDocs,\n  partitionSelect: partitionSelectDocs,\n  range: rangeDocs,\n  resize: resizeDocs,\n  reshape: reshapeDocs,\n  rotate: rotateDocs,\n  rotationMatrix: rotationMatrixDocs,\n  row: rowDocs,\n  size: sizeDocs,\n  sort: sortDocs,\n  squeeze: squeezeDocs,\n  subset: subsetDocs,\n  trace: traceDocs,\n  transpose: transposeDocs,\n  zeros: zerosDocs,\n  fft: fftDocs,\n  ifft: ifftDocs,\n  sylvester: sylvesterDocs,\n  schur: schurDocs,\n  lyap: lyapDocs,\n  // functions - probability\n  combinations: combinationsDocs,\n  combinationsWithRep: combinationsWithRepDocs,\n  // distribution: distributionDocs,\n  factorial: factorialDocs,\n  gamma: gammaDocs,\n  kldivergence: kldivergenceDocs,\n  lgamma: lgammaDocs,\n  multinomial: multinomialDocs,\n  permutations: permutationsDocs,\n  pickRandom: pickRandomDocs,\n  random: randomDocs,\n  randomInt: randomIntDocs,\n  // functions - relational\n  compare: compareDocs,\n  compareNatural: compareNaturalDocs,\n  compareText: compareTextDocs,\n  deepEqual: deepEqualDocs,\n  equal: equalDocs,\n  equalText: equalTextDocs,\n  larger: largerDocs,\n  largerEq: largerEqDocs,\n  smaller: smallerDocs,\n  smallerEq: smallerEqDocs,\n  unequal: unequalDocs,\n  // functions - set\n  setCartesian: setCartesianDocs,\n  setDifference: setDifferenceDocs,\n  setDistinct: setDistinctDocs,\n  setIntersect: setIntersectDocs,\n  setIsSubset: setIsSubsetDocs,\n  setMultiplicity: setMultiplicityDocs,\n  setPowerset: setPowersetDocs,\n  setSize: setSizeDocs,\n  setSymDifference: setSymDifferenceDocs,\n  setUnion: setUnionDocs,\n  // functions - special\n  erf: erfDocs,\n  // functions - statistics\n  cumsum: cumSumDocs,\n  mad: madDocs,\n  max: maxDocs,\n  mean: meanDocs,\n  median: medianDocs,\n  min: minDocs,\n  mode: modeDocs,\n  prod: prodDocs,\n  quantileSeq: quantileSeqDocs,\n  std: stdDocs,\n  sum: sumDocs,\n  variance: varianceDocs,\n  // functions - trigonometry\n  acos: acosDocs,\n  acosh: acoshDocs,\n  acot: acotDocs,\n  acoth: acothDocs,\n  acsc: acscDocs,\n  acsch: acschDocs,\n  asec: asecDocs,\n  asech: asechDocs,\n  asin: asinDocs,\n  asinh: asinhDocs,\n  atan: atanDocs,\n  atanh: atanhDocs,\n  atan2: atan2Docs,\n  cos: cosDocs,\n  cosh: coshDocs,\n  cot: cotDocs,\n  coth: cothDocs,\n  csc: cscDocs,\n  csch: cschDocs,\n  sec: secDocs,\n  sech: sechDocs,\n  sin: sinDocs,\n  sinh: sinhDocs,\n  tan: tanDocs,\n  tanh: tanhDocs,\n  // functions - units\n  to: toDocs,\n  // functions - utils\n  clone: cloneDocs,\n  format: formatDocs,\n  bin: binDocs,\n  oct: octDocs,\n  hex: hexDocs,\n  isNaN: isNaNDocs,\n  isInteger: isIntegerDocs,\n  isNegative: isNegativeDocs,\n  isNumeric: isNumericDocs,\n  hasNumericValue: hasNumericValueDocs,\n  isPositive: isPositiveDocs,\n  isPrime: isPrimeDocs,\n  isZero: isZeroDocs,\n  print: printDocs,\n  typeOf: typeOfDocs,\n  numeric: numericDocs\n};"]},"metadata":{},"sourceType":"module"}