{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhonc\\\\Desktop\\\\CALCULADORA\\\\queueing-theory-calculator\\\\src\\\\components\\\\cost\\\\CostTab.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { CostMMK } from '../../library/queueing/cost/CostMMK';\nimport Button, { ButtonType } from '../buttons/Button';\nimport Input, { InputTypes } from '../inputs/Input';\nimport ResultItem from '../results/ResultItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CostTab = ({\n  mmk\n}) => {\n  _s();\n\n  const [showResult, setShowResult] = useState(false);\n  const [cost, setCost] = useState();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    setShowResult(false);\n    let time = parseFloat(data.time.toString());\n    let cts = parseFloat(data.cts.toString());\n    let cs = parseFloat(data.cs.toString());\n    const cost = new CostMMK(mmk, time);\n    cost.calculateExercise(cs, cts);\n    setCost(cost);\n    setShowResult(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"flex flex-col\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        symbol: \"H\",\n        label: \"horas d\\xEDa laborable\",\n        name: \"time\",\n        placeholder: \"0\",\n        type: InputTypes.Number,\n        register: register,\n        error: errors.time,\n        required: {\n          required: 'El campo es obligatorio'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 flex flex-col lg:grid lg:grid-cols-2 lg:gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          symbol: \"Cts\",\n          label: \"$ por tiempo en el sistema\",\n          name: \"cts\",\n          placeholder: \"0\",\n          type: InputTypes.Number,\n          register: register,\n          error: errors.cts,\n          step: \"0.001\",\n          required: {\n            required: 'El campo es obligatorio'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          symbol: \"Cs\",\n          label: \"$ del servidor\",\n          name: \"cs\",\n          placeholder: \"0\",\n          type: InputTypes.Number,\n          register: register,\n          error: errors.cs,\n          step: \"0.001\",\n          required: {\n            required: 'El campo es obligatorio'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-8\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Calcular Costos\",\n          type: ButtonType.Submit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: showResult ? /*#__PURE__*/_jsxDEV(ResultItem, {\n        label: \"Costo total del sistema\",\n        symbol: \"CT\",\n        value: cost === null || cost === void 0 ? void 0 : cost.ctExercise.toFixed(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center p-12 rounded-sm bg-gray-200\",\n        children: \"Presiona Calcular Costos para ver los resultados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CostTab, \"fmyxapvkDvdYQR/ykDYNSCd8gt4=\", false, function () {\n  return [useForm];\n});\n\n_c = CostTab;\nexport default CostTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"CostTab\");","map":{"version":3,"sources":["C:/Users/jhonc/Desktop/CALCULADORA/queueing-theory-calculator/src/components/cost/CostTab.tsx"],"names":["React","useState","useForm","CostMMK","Button","ButtonType","Input","InputTypes","ResultItem","CostTab","mmk","showResult","setShowResult","cost","setCost","register","handleSubmit","formState","errors","onSubmit","data","console","log","time","parseFloat","toString","cts","cs","calculateExercise","Number","required","Submit","ctExercise","toFixed"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { SubmitHandler, useForm } from 'react-hook-form';\r\nimport { CostMMK } from '../../library/queueing/cost/CostMMK';\r\nimport { MMKModel } from '../../library/queueing/formulas/MMK.model';\r\nimport Button, { ButtonType } from '../buttons/Button';\r\n\r\nimport Input, { InputTypes } from '../inputs/Input';\r\nimport ResultItem from '../results/ResultItem';\r\n\r\ninterface CostMMKProps {\r\n  mmk: MMKModel;\r\n}\r\n\r\ntype CostMMKValues = {\r\n  time: number;\r\n  cts: number;\r\n  cs: number;\r\n};\r\n\r\nconst CostTab = ({ mmk }: CostMMKProps) => {\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [cost, setCost] = useState<CostMMK>();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<CostMMKValues>();\r\n\r\n  const onSubmit: SubmitHandler<CostMMKValues> = (data) => {\r\n    console.log(data);\r\n    setShowResult(false);\r\n    let time = parseFloat(data.time.toString());\r\n    let cts = parseFloat(data.cts.toString());\r\n    let cs = parseFloat(data.cs.toString());\r\n    const cost = new CostMMK(mmk, time);\r\n    cost.calculateExercise(cs, cts);\r\n    setCost(cost);\r\n    setShowResult(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <form className=\"flex flex-col\" onSubmit={handleSubmit(onSubmit)}>\r\n        <Input\r\n          symbol=\"H\"\r\n          label=\"horas dÃ­a laborable\"\r\n          name=\"time\"\r\n          placeholder=\"0\"\r\n          type={InputTypes.Number}\r\n          register={register}\r\n          error={errors.time}\r\n          required={{ required: 'El campo es obligatorio' }}\r\n        />\r\n        <div className=\"mt-2 flex flex-col lg:grid lg:grid-cols-2 lg:gap-2\">\r\n          <Input\r\n            symbol=\"Cts\"\r\n            label=\"$ por tiempo en el sistema\"\r\n            name=\"cts\"\r\n            placeholder=\"0\"\r\n            type={InputTypes.Number}\r\n            register={register}\r\n            error={errors.cts}\r\n            step=\"0.001\"\r\n            required={{ required: 'El campo es obligatorio' }}\r\n          />\r\n          <Input\r\n            symbol=\"Cs\"\r\n            label=\"$ del servidor\"\r\n            name=\"cs\"\r\n            placeholder=\"0\"\r\n            type={InputTypes.Number}\r\n            register={register}\r\n            error={errors.cs}\r\n            step=\"0.001\"\r\n            required={{ required: 'El campo es obligatorio' }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"my-8\">\r\n          <Button text=\"Calcular Costos\" type={ButtonType.Submit} />\r\n        </div>\r\n      </form>\r\n      <div>\r\n        {showResult ? (\r\n          <ResultItem\r\n            label=\"Costo total del sistema\"\r\n            symbol=\"CT\"\r\n            value={cost?.ctExercise.toFixed(5)}\r\n          />\r\n        ) : (\r\n          <div className=\"flex justify-center items-center p-12 rounded-sm bg-gray-200\">\r\n            Presiona Calcular Costos para ver los resultados\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CostTab;\r\n"]},"metadata":{},"sourceType":"module"}